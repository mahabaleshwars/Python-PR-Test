name: Basic Usage

on:
  push:
  pull_request:
  workflow_dispatch:
  
jobs:
  test-matrix:
    name: Python Interpreter Matrix Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version:
          - '3.13'
          - 'pypy3.10'
          - 'graalpy-24.0'
          - '3.14.0t' # Free-threaded Python
        exclude:
          - os: windows-latest
            python-version: 'graalpy-24.0'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Run script
        run: python my_script.py

      - name: Install pytest
        run: pip install pytest

      - name: Run pytest and generate JUnit XML
        run: pytest --junitxml=test-results.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: test-results.xml

  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test-matrix
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Install coverage and pytest
        run: pip install coverage pytest
      - name: Run coverage
        run: |
          coverage run -m pytest
          coverage xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  label-on-failure:
    name: Label PR on Failure
    runs-on: ubuntu-latest
    needs: [test-matrix, lint, coverage]
    if: failure()
    steps:
      - name: Add 'tests-failed' label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: tests-failed

  notify-on-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test-matrix, lint, coverage]
    if: failure()
    steps:
      - name: Send Notification
        run: echo "Tests failed, please check the workflow logs."
